name: Build and Deploy WebGL

on:
  [push,workflow_dispatch]:

permissions:
  contents: write

jobs:
  buildAndDeploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout del código fuente
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Cachear la carpeta Library
      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-WebGL
          restore-keys: Library-

      # Construir el proyecto en WebGL
      - name: Build Unity Project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      # Crear o actualizar la branch gh-pages directamente
      - name: Deploy to GitHub Pages
        run: |
          BUILD_DIR=build/Docs
          GH_PAGES_BRANCH=gh-pages

          # Configurar Git
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Crear un nuevo repositorio en un directorio temporal
          DEPLOY_DIR=$(mktemp -d)
          mkdir -p $DEPLOY_DIR
          cd $DEPLOY_DIR
          git init
          git checkout --orphan $GH_PAGES_BRANCH

          # Copiar los archivos de la build directamente a la raíz de gh-pages
          cp -r $GITHUB_WORKSPACE/$BUILD_DIR/* $DEPLOY_DIR/

          # Commit y push a la branch gh-pages
          git add .
          git commit -m "Deploy WebGL build from commit ${{ github.sha }}"
          git push --force https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} $GH_PAGES_BRANCH